IF ELSE:prob 1

import java.util.Scanner;
class Main {
    public static void main(String[] args) 
    {
       Scanner input = new Scanner(System.in);
        int a=input.nextInt();
        if(a>18)
           System.out.print("elligible");
	else
	   System.out.print("not eligible");
    }
   }

NESTED IF:prob 2

a) import java.util.Scanner;
   class Main {
    public static void main(String[] args) 
    {
       Scanner input = new Scanner(System.in);
        int a=input.nextInt();
        int b=input.nextInt();
      if(a>85)
      {
          System.out.print("elligible");
       if(b<50000)
      {
         System.out.print("eligibile");
      }
      }
      else
      {
          System.out.print("not eligible");
      }
      
        
    }
}
b) import java.util.Scanner;
   class Main {
    public static void main(String[] args) 
    {
       Scanner input = new Scanner(System.in);
        int a=input.nextInt();
        int b=input.nextInt();
      if(a>85 && b<50000)
  	System.out.print("elligible");
      else
	System.out.print("not eligible");
    }

FOR LOOP WITH SINGLE-DIMENSIONAL ARRAY:

class Main {
    public static void main(String[] args) 
    {
        int arr[][]={1,4,5,8,9};
        int count=0;
        for(int i=0;i<arr.length;i++)
        {
            count++;
	    System.out.println(count);
         }
     }
  }

FOR LOOP WITH MULTI-DIMENSIONAL ARRAY:

class Main {
    public static void main(String[] args) 
    {
        int arr[][]={{1,4,5,8,9},{11,12,13,14,15}};
        for(int i=0;i<arr.length;i++)
        {
            for(int j=0;j<arr[i].length;j++) 
            {
                System.out.print(arr[i][j]+" ");
            }
             System.out.println(" ");
        }
    }
}


STRING-TO GET INPUT FROM USER AND COMPARE:

import java.util.Scanner;
class Main {
    public static void main(String[] args) {
       String s1 = new String("Hello");
       Scanner input = new Scanner(System.in);
       String s2 = input.nextLine();
       System.out.println(s1.equals(s2));
    }
}


STRING-STRINGS COMPARISON USING LITERALS AND KEYWORD(MEMORY ALLOCATION):

class Main {
    public static void main(String[] args) {
       String s1= "Java is fun";
       String s2= "Java is fun";
       String s3 = new String("Java is fun");
       System.out.println(s1 == s2);
       System.out.println(s1 == s3);
       System.out.println(s2 == s3);
       System.out.println(s1.equals(s3));
    }
}


STRING-TO PRINT STRING NO.OF.TIMES:

class Main {
    public static void main(String[] args) {
        String s1="Java programming";
        for(int i=0;i<s1.length();i++){
        System.out.println(s1);
        }
        
    }
}

STRING-TO PRINT ONE BY ONE FROM TOP TO BOTTOM:

class Main {
    public static void main(String[] args) {
        String s1="Java programming";
        for(int i=0;i<s1.length();i++){
        System.out.println(s1.charAt(i));
        }
        
    }
}

STRING-TO PRINT STRING FROM BOTTOM TO TOP REVERSE:

class Main {
    public static void main(String[] args) {
        String s1="Java programming";
        for(int i=s1.length()-1;i>=0;i--){
        System.out.println(s1.charAt(i));
        }
        
    }
}

STRING-SUBSTRING:

class Main {
    public static void main(String[] args) {
       String str = "Java programming";
       System.out.println("Substring from index5:"+str.substring(5));
       System.out.println("Substring from index0to4:"+str.substring(0,4));
    }
}



STRING-INDEXOF MEHTOD:

class Main {
    public static void main(String[] args) {
        String str="Java programming";
        System.out.println("Index of 'prog':"+str.indexOf("prog"));
        System.out.println("Index of 'z':"+str.indexOf('z'));
    }
}

STRING-REPLACE METHOD:

class Main {
    public static void main(String[] args) {
        String s1="Java programming";
        System.out.println(s1.replace('a','x'));
        
    }
}

STRING-EQUALS METHOD:

class Main {
    public static void main(String[] args) {
        String str1="Java";
        String str2="Java";
        System.out.println("Case-sensitive equals:"+str1.equals(str2));
        System.out.println("Case-sensitive equals:"+str1.equalsIgnore(str2));
        }
        
    }
}

STRING-TRIMMING METHOD:

class Main {
    public static void main(String[] args) {
        String str="Java programming";
        System.out.println("Before trim:["+str+"]");
        System.out.println("After trim:["+str.trim()+"]");
        
    }
}


STRING-INTERN() TO SAVE STRING FROM HEAP MEMORY TO STRING POOL(MEMORY ALLOCATION):

class Main {
    public static void main(String[] args) {
        String s1=new String("Javaprogramming");
        String s2="Javaprogramming";
        String s3=s1.intern();
        System.out.println(s1==s2);
        System.out.println(s2==s3);
    }
}

STRING-USING COTAINS

class Main {
    public static void main(String[] args) {
        String str="Javaprogramming";
        System.out.println("Contins'Java':"+str.contains("Java"));
        System.out.println("Contins'python':"+str.contains("Python"));
    }
}


STRING-USING SPLIT METHOD(GREATEST NUM):

import java.util.Scanner;
class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        String s1 = input.nextLine();
        String[] arr = s1.split(",");
        int max=0;
        for(int i=0;i<arr.length;i++)
        {
            if(Integer.parseInt(arr[i])>max)
            {
                max=Integer.parseInt(arr[i]);
            }
        }
        System.out.print(max);
    }
}
OUTPUT:123,456,789
789


STRING-TO FIND LARGEST NUMBER WITH COMPARISON:

class Main {
    public static void main(String[] args) {
        
        String s1 = "123,456,789";
        String[] arr = s1.split(",");
        System.out.println(arr[0]);
        int max=0;
        for(int i=0;i<arr.length;i++)
        {
            if(Integer.parseInt(arr[i])>max)
            {
                max=Integer.parseInt(arr[i]);
                System.out.println("changed max:"+max);
            }
        }
        System.out.println(max);
    }
}
OUTPUT:123
changed max:123
changed max:456
changed max:789
789


STRING-FINDING LARGER NUMBER WITHOUT SPLIT USING ARRAY:

class Main {
    public static void main(String[] args) {
        int a=10;
        int max=0;
        int[] arr={1,2,4,3,5,12,10};
        for(int i=0;i<arr.length;i++)
        {
            if(arr[i]>max)
            {
                max=arr[i];
            }
        }
        System.out.print(max);
    }
}

